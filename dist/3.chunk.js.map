{"version":3,"sources":["webpack:///./src/app/layout/search/search.module.ts","webpack:///./src/app/shared/services/search/search.service.ts?c50b**","webpack:///./src/app/shared/services/index.ts?4ef5**","webpack:///./src/app/layout/search/index.ts","webpack:///./src/app/layout/search/search.component.ts","webpack:///./src/app/layout/search/search.routes.ts","webpack:///./src/app/layout/search/search.html"],"names":[],"mappings":"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","file":"3.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { SearchComponent } from './search.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DataTableModule} from 'angular2-datatable';\nimport { SearchRoutingModule } from './';\nimport { SearchService } from '../../shared/services/';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, DataTableModule, SearchRoutingModule],\n    providers: [SearchService],\n    declarations: [SearchComponent],\n    exports: [SearchComponent, CommonModule]\n})\n\nexport class SearchModule {\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/search/search.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { environment } from '../../../../environments/environment';\n/**\n * For the research, we use the select_all?query functionnality (NOT STABLE). \n * The return format is the database format, therefore we cannot use the job model.\n */\n@Injectable()\nexport class SearchService {\n\n\n    private baseUrlSearch = environment.API_PROTOCOLE + '://' + environment.API + 'oarapi-priv/select_all.json';\n\n    constructor(\n        private http: Http\n    ) { }\n\n    /**\n     * Build the URL base on a given query\n     * if limit isn't defined, we set it to 1000\n     */\n    buildUrl(query: string, limit?: number): string {\n\n        // TODO : Add limit to App config\n        if (!limit) { limit = 1000; }\n\n        return this.baseUrlSearch + '?limit=' + limit + '&query=' + encodeURI(query);\n    }\n\n    /**\n     * Execute the search request\n     */\n    request(url: string): Observable<Response> {\n\n        let headers = new Headers();\n        headers.append('Content-Type', 'text/html');\n        console.log('req function');\n\n        return this.http.get(url, { headers: headers })\n            .map(res => res.json());\n\n    }\n\n    searchByName(name: string): Observable<Response> {\n        name = name.toLowerCase();\n        // GROUPE BY because of count(*) request being also execute\n        //let req = `FROM jobs WHERE job_user='docker' GROUP BY job_id ORDER BY job_id DESC`;\n        let query = `FROM jobs WHERE lower(job_name) LIKE '%${name}%' GROUP BY job_id ORDER BY job_id DESC`;\n        let url = this.buildUrl(query);\n        return this.request(url);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/search/search.service.ts","export * from './oar-api';\nexport * from './search/search.service';\nexport * from './auth/auth-guard.service';\nexport * from './auth/authentification.service';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/index.ts","/**\n * This barrel file provides the export for the lazy loaded Jobs.\n */\nexport * from './search.component';\nexport * from './search.module';\nexport * from './search.routes';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/search/index.ts","import { Component } from '@angular/core';\nimport { OarApiService } from '../../shared/services/oar-api/oar-api.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Http, Response, Headers } from '@angular/http';\nimport { SearchService } from '../../shared/services/search/search.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'search-page',\n  templateUrl: './search.html',\n  providers: [OarApiService]\n})\n\nexport class SearchComponent {\n\n  search: string;\n  json: string = '';\n  jobList: any[] = [];\n\n  selectedValue = 'Id';\n  options: string[] = ['Name', 'Id', 'Date'];\n\n  constructor(private apiService: OarApiService,\n    private router: Router,\n    private http: Http,\n    private searchService: SearchService,\n    private route: ActivatedRoute) {\n\n\n    this.route.params.subscribe(params => {\n      console.log(params);\n      this.search = params['strSearch'];\n    });\n  }\n\n  searchRequestByName(name: string): void {\n\n    this.searchService.searchByName(name).subscribe(\n      (res: any) => this.jobList = res.items,\n        err => this.jobList = []\n    );\n  }\n\n  searchSubmit() {\n    switch (this.selectedValue) {\n      case 'Id':\n        this.gotoJob(this.search);\n        break;\n      case 'Name':\n        this.searchRequestByName(this.search);\n        break;\n      case 'Date':\n        this.searchRequestByName(this.search);\n        break;\n    }\n  }\n\n\n  gotoJob(id: string) {\n    this.router.navigate(['jobs/' + id]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/search/search.component.ts","import { Route, Routes, RouterModule} from '@angular/router';\nimport { SearchComponent } from './index';\nimport { NgModule } from '@angular/core';\n\nconst routes: Routes = [\n    { path: ':strSearch', component: SearchComponent},\n    { path: '', component: SearchComponent },\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class SearchRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/search/search.routes.ts","module.exports = \"<h1>Search</h1>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 form-inline\\\">\\n\\n        <select [(ngModel)]=\\\"selectedValue\\\" class=\\\"custom-select\\\">\\n            <option *ngFor=\\\"let o of options\\\" [ngValue]=\\\"o\\\">{{o}}</option>\\n        </select>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" width=\\\"100%\\\" [(ngModel)]=\\\"search\\\" placeholder=\\\"Search\\\" />\\n        <button (click)=\\\"searchSubmit()\\\" class=\\\"btn btn-default\\\">Submit</button>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\"row\\\">\\n\\n    <table class=\\\"table table-striped\\\" [mfData]=\\\"jobList\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\" *ngIf=\\\"jobList.length > 0 \\\">\\n        <thead>\\n            <tr>\\n                <th style=\\\"width: 20%\\\">\\n                    <mfDefaultSorter by=\\\"job_id\\\">ID</mfDefaultSorter>\\n                </th>\\n                <th style=\\\"width: 30%\\\">\\n                    <mfDefaultSorter by=\\\"job_name\\\">Name</mfDefaultSorter>\\n                </th>\\n                <th style=\\\"width: 10%\\\">\\n                    <mfDefaultSorter by=\\\"job_user\\\">Owner</mfDefaultSorter>\\n                </th>\\n                <th style=\\\"width: 20%\\\">\\n                    <mfDefaultSorter by=\\\"state\\\">State</mfDefaultSorter>\\n                </th>\\n                <th style=\\\"width: 20%\\\"> More\\n                </th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let item of mf.data\\\">\\n                <td>{{ item.job_id }}</td>\\n                <td>{{item.job_name}}</td>\\n                <td>{{item.job_user}}</td>\\n                <td>{{item.state}}</td>\\n                <td><button class=\\\"btn btn-default\\\" (click)=\\\"gotoJob(item.job_id)\\\">More</button></td>\\n\\n\\n            </tr>\\n        </tbody>\\n        <tfoot>\\n            <tr>\\n                <td colspan=\\\"4\\\">\\n                    <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\n                </td>\\n            </tr>\\n        </tfoot>\\n    </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/search/search.html\n// module id = 887\n// module chunks = 3"],"sourceRoot":""}